package orf;

import java.util.ArrayList;

import security.ExceptionLogger;

public class ORFanalyzer {
	private ArrayList<ORF> goodORFs;
	private ArrayList<ORF> excludedORFs;
	private String totalSequence;
	private String antiSenseSequence;
	private int minLength;
	private boolean multipleStarts;

	public ORFanalyzer(String inputSequence, int minLen, boolean multipleStarts) {
		this.minLength = minLen;
		this.multipleStarts = multipleStarts;
		goodORFs = new ArrayList<ORF>();
		excludedORFs = new ArrayList<ORF>();
		try {
			totalSequence = normalizeSeq(inputSequence);
			startAnalysis();
			findStartPositions();
		} catch (Exception e) {
			ExceptionLogger.writeSevereError(e);
		}

		// printAllORFs();
	}

	private void findStartPositions() {
		for (ORF orf : goodORFs) {
			if (orf.getSense() == '+')
				orf.addStartPos(totalSequence.indexOf(orf.getNucSequence()));
			else
				orf.addStartPos(antiSenseSequence.indexOf(orf.getNucSequence()));
		}
	}

	private String normalizeSeq(String in) {
		return in.toLowerCase().replaceAll("u", "t");
	}

	private void startAnalysis() {

		shiftFrame(totalSequence, '+');
		antiSenseSequence = createAntisenseSeq(totalSequence);
		shiftFrame(antiSenseSequence, '-');
	}

	private void shiftFrame(String seq, char sense) {
		for (int frame = 0; frame < 3; frame++) {
			ArrayList<String> frameCodons = splitIntoCodons(seq
					.substring(frame));
			ArrayList<Integer> startPositions = getStartCodonPos(frameCodons);
			grabORFs(frameCodons, startPositions, sense, frame + 1);
		}
	}

	/*
	 * private void printAllORFs() {
	 * System.out.println("START\tEND\tSENSE\tFRAME\tLENGTH\tNUC\tAA"); int
	 * counter = 1; for (ORF o : goodORFs) { System.out.println(counter + ": " +
	 * o.getInfo().toString()); counter++; } }
	 */

	private void grabORFs(ArrayList<String> codons, ArrayList<Integer> pos,
			char sense, int frame) {
		for (int i = 0; i < pos.size(); i++) {
			ORF orf = new ORF(frame, sense);
			for (int j = pos.get(i); j < codons.size(); j++) {
				if (!stopCodonChecker(codons.get(j)))
					orf.addCodon(codons.get(j));
				else {
					orf.addCodon(codons.get(j));
					break;
				}
			}
			if (orf.getSeqLength() >= minLength)
				goodORFs.add(orf);
			else
				excludedORFs.add(orf);
		}
	}

	private ArrayList<Integer> getStartCodonPos(ArrayList<String> in) {
		ArrayList<Integer> temp = new ArrayList<Integer>();
		for (int i = 0; i < in.size(); i++) {
			if (startCodonChecker(in.get(i)))
				temp.add(i);
		}
		return temp;
	}

	private ArrayList<String> splitIntoCodons(String in) {
		ArrayList<String> temp = new ArrayList<String>();
		int totalLength = in.length();
		for (int i = 0; i < totalLength; i += 3) {
			if ((i + 3) >= (totalLength - 1))
				break;
			temp.add(in.substring(i, i + 3));
		}
		return temp;
	}

	/*
	 * private ArrayList<Integer> getAllStartingPositions(String needle, String
	 * haystack) { ArrayList<Integer> temp = new ArrayList<Integer>(); int
	 * lastIndex = 0; while (lastIndex != -1) { lastIndex =
	 * haystack.indexOf(needle, lastIndex); if (lastIndex != -1) {
	 * temp.add(lastIndex); lastIndex += needle.length(); } } return temp; }
	 */

	private String createAntisenseSeq(String in) {
		StringBuilder sb = new StringBuilder();
		for (int i = in.length() - 1; i >= 0; i--) {
			sb.append(translateChar(in.charAt(i)));
		}
		return sb.toString();
	}

	public ArrayList<ORF> getORFlist() {
		return goodORFs;
	}

	private boolean startCodonChecker(String codon) {
		if (multipleStarts) {
			switch (codon) {
			case "atg":
				return true;
			case "gtg":
				return true;
			case "ttg":
				return true;
			}
		} else {
			if (codon.equals("atg"))
				return true;
		}
		return false;
	}

	private boolean stopCodonChecker(String codon) {
		switch (codon) {
		case "tag":
			return true;
		case "taa":
			return true;
		case "tga":
			return true;
		default:
			return false;
		}
	}

	private char translateChar(char c) {
		switch (c) {
		case 't':
			return 'a';
		case 'a':
			return 't';
		case 'c':
			return 'g';
		case 'g':
			return 'c';
		default:
			return '-';
		}
	}

	// https://ncbi.github.io/blast-cloud/doc/running-web-blast.html

	public static void main(String[] args) {
		new ORFanalyzer(
				"CTAAACTACGTGAAATCGCCCCCCCCCCACACTCTACACCGGCCGCCCCAGATCGAGGCGGCCGCGTCGTTTTTGGGGGGCACCTGGCTAGCAGCCACCTAGCAGCTAGACGACCGTCGCCAGGAGTGCCCGGAGCCGGGGAAAAACCCTGTGGATAGCGGCACTTATCCACGTGAAATCGGACCCCCCCGGTACGTGAAATCGGACCCCCCTTACCCCACTTATCCACGTGAAATCGGACCCCCCTTGGCACGTGAAATCGGACCCCCCCTAAACCGGTAGGTTAAGCCTTTAAAAAAATCCTATAAATATTCTTCCTGTAATTGGCCGGCCCGCTCTGTGGAAAAGCCCAGCCTGGGCGAGATTCCAACCCCAGCGCCCTACGGGCGCGCCTGCCCTCCGGTCGCTTCGCTCCCTTCGCCCCGCCGCTTCGCGTCGGCCTATCGCGGCCGATGGCCGCTCAAAAATGGCTGGCCTACGGCCAGGCATCTACCAGGCGCGGCACGCCGCGCCGGTGCCAGCTCTACCGCCTGTGCCCATCTTGGGCACCCTGCTAGGGTCAGGACCCATAAAGCGGCTTCCGCAGCGGCTCGCAATGTGATTCAAGCTCCCCGGAAGGGAGCTTATCGTGACGCATTCTTATTTTTGGCTGTCAGATCAGCAGTTTGATCGCCTCGCGCCCCTGCTGCCGCAAGACACCAGGGGCAAGCCCCGCGTCGATGACCGACGGGTCATCAGCGGCATCGTCCACGTCCTGAAGTCCGGCTGCCGGTGGGTGGACGCGCCGGAGGTCTACGGTCCGCGCAAGACGCTCTACAACCGGTTCGTCCGGTGGGCGGCGAAGGGTATCTGGACCGACATCTTCAAGGCTCTGGCGGATGCCGGAGGGCCTCCCTCGGACGTGATGATCGACAGTTCCGCCGTCCGCGCACACCGCTGCGCCAGCGGTGGAAAAGGGGGGAGCGCAGCCAGGCCATCGGCCGGTCGCGCGGCGGCCGGACCACGAAGATCCACGCCCTGACGGACCAGTTTGGCCGGCCCCTGCGCCTCCACCTCCACCTCACCGGCGGCAACGCCTCCGACTGTCGCGGCGGCGAACCTCTTCTGGAGGCGCTGCCGGCGGAGGTCCTCGTGCATGCCGACAAGGGCTACGACACCGACCGGGTGCGGCAGATCATCGAGAACCAGGGAGCCGCCCCGAACATCCCGCCCAAGGCCAACAGGCGCTGGAAAAACTGCTTCTCGCCCTTCCTCTACCGCGACCGCAACGCCATTGAGCGGATGTTCGGCCGGCTGAAGGACTTCCGCCGCATCGCCACGAGATACGACCGCTTGGCCGTCAACTTCCTCGCCGCCGTCCAGATCGCCGCCTTCGTCAGCTACTGGTTATGAGTCTGGAGCCTAGTCGGCCTCATCATCCAGACCGGAACAATTTGAACGTGAACGCCCGGCTGCCATTGCCGTGATCGAAATGGCGGCTGGTGACACGACTGCTTGATCTACCCCTACTCAGGAGGGCGCTTCGATAGCGTAGCCATTGAGCCGGAAACCGGCGAGCACTGGGGCAGCGTGATCTGGTGCGAGTATGTGTGACCCCCACGGTAACTCCACCCGCCCCGATCTGGAAAACCCAGACGGGGCGCGGCTTTGCTGGCGATTCGCAAAATCCATCCAAGATTCTCCAAGAATCTCCACTAGGCGCAGCACAGCCCGCGCCCCTTCGGCGCGGTCTGGCATTGCCCAAAATGCCCGGCCAAGGCCGGAAGGCGAACACCTCTCCCCCCGCCTTCGGCGACCCCCTCCGGGGGTAAAGGGCCAGCGGGGAGAGGGGTGGGGCCGGTTTCCCGGCCTAAACCCCTCAGGAAGCGTTTCCCGGCGTTTCTGGCGCATCCCCCAAGGGCAGCCCTGCCTGACCCGGCATCGGCGCGTCAGCGGCCTTCTGGGGCGCTTTGCGGGGCTTCGGATAGCCCGCCTTGCGCATGGCCTTGGTCAGCGCCTCGATTGCCGCCCAGGTATCCGCCGCCCATGCCTCGGACGGCTCAAAGTCCCCGGCCTTGATCGTGTCGGCAACCTCTTTAATCCGACTGGCGGCAGACTTAGCGGAATACAGGCGACCTCGCTTTTCTGCCGCCTGTCGTTCTGTTTCAATGTATGACTGTAGTTCTGTTTTTTCTTCGCCTGTCAGATTCTCAATTAGGCCGTCTGACGGCTCGTAAGAATATGCGTCAATAGACCCCATCATCTTGACGATGGCGCGGCGCTTTTCCTTGTCATACCCCCGGTAGGCGAGCACCTGAACCCGGCGACCTTGGCGCTTAAACTGCATGGCGGTTTCTCCGTTTGACTGTGTGATTGTATTTTAGTCTGATAGTCGCACGCTGTCAAATGTTTATTGTCGGCTTCTGTTTCAATACGACTGTCGCACTTAAATAAGTTTGCACTGTCGGGTTAAGTAATGCTTGACAGTCTGCCGTGCTTACGCTACCATGGCGGCATGGTATCAGTTCGCCCCGGCGCTTTGCCCACCCCTCTCCCCGCTGGCCCATTACCGCCCTTGGGCGGTCGGGCCGGGAGCGCAGCGAGCGGGCCGGGTGGGTGGCTGTTCGGTGCTTGCATGGAGATGTGCTATTATGGTGTTTGCGCGGTGGTTTGGCATGTAGCAAGGTGTAACCTGCGCTTCGCTTGGTTCTCACCCTCCGGCCTTCGGCCTACGCCCCCGCTCCCTTCGGTCGGGGGGTTGCTGCGCGTTTCGCTTCGCTTCATTTGCTGGAGGGCTTCGCCAATGAGCACTGACGAATCCAAGCGCCGCCGCCGTGGGCCTGCGCCGCTCGACGCCACGGACAAGCGCGGGCATACCGTCTCGGTGCGCCTCAACGATGCCGAGCTTGCGCGGCTGGATTCGCAGCGTGACGCGGTGCAGATGCAGCGCGGTGAGTACCTACGCGCCGCCGCCCTGCATCGCCTGCCGCCCACTATCCCGGAAGTGAACCGGGAAGCGTGGGCCGCGTTG"
						+ "GCCCGGACGGCGGCCAACCTGAACCAGATCGCGCACCGGCTGAACGCTGGCGACGCGCTCCCGCTGGCCGAGGTGCGGGCAACGCTCGACGCCTTCAGGCGTGACCTGATAGGCGTCAAGCACGACGCCGAGGACGTGGAAGATGAAAGCGAAGGTTAGCCGTGGTGGCGGTTTTCGCGGTGCGCTGAACTACGTTTTTGACGTTGGCAAGGAAGCCACGCACACGAAAAACGCGGAGCGAGTCGGCGGCAACATGGCCGGGAATGACCCCCGCGAACTGTCGCGGGAGTTCTCAGCCGTGCGCCAGTTGCGCCCGGACATCGGCAAGCCCGTCTGGCATTGCTCGCTGTCACTGCCTCCCGGCGAGCGCCTGAGCGCCGAGAAGTGGGAAGCCGTCGCGGCTGACTTCATGCAGCGCATGGGCTTTGACCAGACCAATACGCCGTGGGTGGCCGTGCGCCACCAGGACACGGACAAGGATCACATCCACATCGTGGCCAGCCGGGTAGGGCTGGACGGGAAAGTGTGGCTGGGCCAGTGGGAAGCCCGCCGCGCCATCGAGGCGACCCAAGAGCTTGAGCATACCCACGGCCTGACCCTGACGCCGGGGCTGGGCGATGCGCGGGCCGAGCGCCGGAAGCTGACCGACAAGGAGATCAACATGGCCGTGAGAACGGGCGATGAACCGCCGCGCCAGCGTCTGCAACGGCTGCTGGATGAGGCGGTGAAGGACAAGCCGACCGCGCTAGAACTGGCCGAGCGGCTACAGGCCGCAGGCGTAGGCGTCCGGGCAAACCTCGCCAGCACCGGGCGCATGAACGGCTTTTCCTTCGAGGTGGCCGGAGTGCCGTTCAAAGGCAGCGACTTGGGCAAGGGCTACACATGGGCGGGGCTACAGAAAGCAGGGGTGACTTATGACGAAGCTAGAGACCGTGCGGGCCTTGAACGATTCAGGCCCACAGTTGCAGATCGTGGAGAGCGTCAGGACGTTGCAGCAGTCCGTGAGCCTGATGCACGAGGACTTGAAGCGCCTACCGGGCGCAGTCTCGACCGAGACGGCGCAGACCTTGGAACCGCTGGCCCGACTCCGGCAGGACGTGACGCAGGTTCTGGAAGCCTACGACAAGGTGACGGCCATTCAGCGCAAGACGCTGGACGAGCTGACGCAGCAGATGAGCGCGAGCGCGGCGCAGGCCTTCGAGCAGAAGGCCGGGAAGCTGGACGCGACCATCTCCGACCTGTCGCGCAGCCTGTCAGGGCTGAAAACGAGCCTCAGCAGCATGGAGCAGACCGCGCAGCAGGTGGCGACCTTGCCGGGCAAGCTGGCGAGCGCACAGCAGGGCATGACGAAAGCCGCCGACCAACTGACCGAGGCAGCGAACGAGACGCGCCCGCGCCTTTGGCGGCAGGCGCTGGGGCTGATTCTGGCCGGGGCCGTGGGCGCGATGCTGGTAGCGACTGGGCAAGTCGCTTTAAACAGGCTAGTGCCGCCAAGCGACGTGCAGCAGACGGCAGACTGGGCCAACGCGATTTGGAACAAGGCCACGCCCACGGAGCGCGAGTTGCTGAAACAGATCGCCAATCGGCCCGCGAACTAGACCCGACCGCCTACCTTGAGGCCAGCGGCTACACCGTGAAGCGAGAAGGGCGGCACCTGTCCGTCAGGGCGGGCGGTGATGAGGCGTACCGCGTGACCCGGCAGCAGGACGGGCGCTGGCTCTGGTGCGACCGCTACGGCAACGACGGCGGGGACAATATCGACCTGGTGCGCGAGATCGAACCCGGCACCGGCTACGCCGAGGCCGTCTATCGGCTTTCAGGTGCGCCGACAGTCCGGCAGCAACCGCGCCCGAGCGAGCCGAAGCGCCAACCGCCGCAGCTACCGGCGCAAGGGCTGGCAGCCCGCGAGCATGGCCGCGACTACCTCAAGGGCCGGGGCATCAGCCAGGACACCATCGAGCACGCCGAGAAGGCGGGCATGGTGCGCTATGCAGACGGTGGAGTGCTGTTCGTCGGCTACGACCGTGCAGGCACCGCGCAGAACGCCACACGCCGCGCCATTGCCCCCGCTGACCCGGTGCAGAAGCGCGACCTACGCGGCAGCGACAAGAGCTATCCGCCGATCCTGCCGGGCGACCCGGCAAAGGTCTGGATCGTGGAAGGTGGCCCGGATGCGCTGGCCCTGCACGACATCGCCAAGCGCAGCGGCCAGCAGCCGCCCACCGTCATCGTGTCAGGCGGGGCGAACGTGCGCAGCTTCTTGGAGCGGGCCGACGTGCAAGCGATCCTGAAGCGGGCCGAGCGCGTCACCGTGGCCGGGGAAAACGAGAAGAACCCCGAGGCGCAGGCAAAGGCCGACGCCGGGCACCAGAAGCAGGCGCAGCGGGTGGCCAAAATCACCGGGCGCGAGGTGCGCCAATGGACGCCGAAGCCCGAGCACGGCAAGGACTTGGCCGACATGAACGCCCGGCAGGTGGCAGAGATCGAGCGCAAGCGACAGGCCGAGATCGAGGCCGAAAGAGCACGAAACCGCGAGCTTTCACGCAAGAGCCGGAGGTATGATGGCCCCAGCTTCGGCAGATAAGAGCGCCTGTCAGTCGGTGTGATGAACCGACCGACAGGCTAACCATCATCAACCTGAGTAGGAGGCCGATATGGCTATCAACATTATGGAGGCGTTCCAGCAGGAACCGCCACAACTGGACGACATCCACGCCCTGTGGATCAACCGCATTCAGGACTGGCTGGAGCCGCACCAGAGCCAAATTTATCGCGTTTCGGTGCAAAAAAAATCGCCGCGCTACACTTTGTGGCTCGCTTCAGGTAAAATATTGACTATTCATGTTGTTGTTATTTCGTCTCTTCCAGAATAAGGAATCCCATGGTTAAAAAATCACTGCGCCAGTTCACGCTGATGGCGACGGCAACCGTCACGCTGTTGTTAGGAAGTGTGCCGCTGTATGCGCAAACGGTGGACGTACAGCAAAAACTTGCCGAATTAGAGCAGCAGTCGGGAGGAAGGCTGGGTGTGGCATTGATTAACACGGCGGATAATTCGCAAATACTTTATCGTGCTGATGAGCGCTTTGCGATGTGCAGCACCAGTAAAGTGATGGCCGTGGCCGCGGTGCTGAAGAAAAGTGAAAGCGAACCGAATCTGTTAAATCAGCGAGTCGAGATCAAAAAATCTGACCTGGTTAACTATAATCCGATTGCGGAAAAACACGTCAATGGGACGATGTCACTGGCTGAGCTCAGCGCGGCCGCGCTACAGTACAGCGATAACGTGG"
						+ "CGATGAATAAGCTGATTGCTCACGTTGGCGGCCCGGCTAGCGTTACCGCGTTCGCCCGACAGCTGGGAGACGAAACGTTCCGTCTCGACCGTACCGAGCCGACGTTAAACACCGCCATTCCTGGCGATCCGCGTGATACCACTTCACCTCGGGCAATGGCGCAAACGCTGCGTAATCTGACGCTGGGTAAAGCATTGGGTGACAGCCAACGGGCGCAGCTGGTGACGTGGATGAAAGGCAATACTACCGGTGCAGCGAGTATTCAGGCTGGACTGCCTGCTTCCTGGGTTGTGGGGGATAAAACCGGCAGCGGTGGCTATGGTACCACCAACGATATCGCGGTGATTTGGCCAAAAGATCGTGCGCCGCTGATTCTGGTCATTTACTTCACCCAGCCCCAACCTAAGGCAGAAAGCCGTCGCGATGTATTAGCGTCGGCGGCTAAAATCGTCACCGACGGTTTGTAGCAGCGGAAACGGAATGGGGAAACTCATTCCGTTTTGTTTATCACCTCAGACGGCAAAACCACCATCGCCCACCTGCGCTTGCGCATACCAGGC"
						+ "CATAAGCTCTGTGGCTCCTGATTCACCTTCCGCTGGAGCCCAGTGCGCATAGTCATCGGCAGCCACGGGTTGATAGCCACCGTGTTTTACTTCAAAAATTACGCCACCGGTATCCAGCGACAGCACGGCATGCCAGACTCCAGCGGCCATCTCCAGCACCGTACAGGTTTCCCCCAATATCGCCCGATGGGTGACGGTACCCCGATCGTCAAAATTCAGCACCACGAAACGACCCCTTAATGGCAACAGTAGCTCGAAGGTGTGAGGGTGTCGGTGCGGGCGCACATAGGTCCCAGGTTCCATGGCAATGGCCAGACGTTGGACCGAATCGCTTAATTCTGGATGGAAATTACGATGCGCACGGAGCGGCACTGTTGCAAATAGTCGGTGGTGATAAACTTATCATCCCCTTTTGCTGATGGAGCTGCACATGAACCCATTCAAAGGCCGGCATTTTCAGCGTGACATCATTCTGTGGGCCGTACGCTGGTACTGCAAATACGGCATCAGTTACCGTGAGCTGCAGGAGATGCTGGCTGAACGCGGAGTGAATGTCGATCACTCCACGATTTACCGCTGGGTTCAGCGTTATGCGCCTGAAATGGAAAAACGGCTGCGCTGGTACTGGCGTAACCCTTCCGATCTTTGCCCGTGGCACATGGATGAAACCTACGTGAAGGTCAATGGCCGCTGGGCGTATCTGTACCGGGCCGTCGACAGCCGGGGCCGCACTGTCGATTTTTATCTCTCCTCCCGTCGTAACAGCAAAGCTGCATACCGGTTTCTGGGTAAAATCCTCAACAACGTGAAGAAGTGGCAGATCCCGCGATTCATCAACACGGATAAAGCGCCCGCCTATGGTCGCGCGCTTGCTCTGCTCAAACGCGAAGGCCTGTGCCCGTCTGACGTTGAACACCGACAGATTAAGTACCGGAACAACGTGATTGAATGCGATCATGGCAAACTGAAACGGATAATCGGCGCCACGCTGGGATTTAAATCCATGAAGACGGCTTACGCCACCATCAAAGGTATTGAGGTGATGCGTGCACTACGCAAAGGCCAGGCCTCAGCATTTTATTATGGTGATCCCCTGGGCGAAATGCGCCTGGTAAGCAGAGTTTTTGAAATGTAAGGCCTTTGAATAAGACAAAAGGCTGCCTCATCGCTAACTTTGCAACAGTGCCGGCACGCTCGATCTTGAAACCGGCCGGCTCCTGATCGGCTACGCCAGGGTATCGACCGACGATCAAGACTTGAGGAATCAGCGCGACGAGCTGCACGCGGCCGGCTGCACGCGCATCTTTGCCGAGAAAGTCACTGGCAGCCATTCGCGCCGGCCGGAGCTGGCACGGATGCTCGATCACCTGCGCCCGGGCGACGTGGTGACAGTGACGCGCCTGGATCGCCTGGCGCGTAGCACCCGCGACTTGCTGGACATAGCCGAGCGCATCCAGGCGGCCGGCGCGGGCTTGCGCAGTCTGGCCGAGCCCTGGGCAGATACCACGACGCCGGCGGGGCGCATGGTGTTAACCGTCTTTGCCGGCATTGCCGAGTTCGAGCGCAGCTTGATCGTTGACCGCACCCGCAAGGGCCGCGAGGCGGCCAAGCGGCGCGGCGTGCAATTCGGCCGCCGCCCTACCCTTTCGGCCGGCAAGATCGAGCACGCCCGCGACCTGCTGGCCCAGGGGCGCACAGCCGGCGAGGTTGCAGAGCTTCTAGGCGTGCATCGGGCCACCCTTTACCGGGCGCTACGCAGCCAGGAAACGAGCCGAGCCGACGCCGCCAGGCGCGGCGCGTTCATCGAGGACGCCTTGACCGAGGGTGATGCCCTGGTGGCCGCCGGCGAGGATGAACACCAGGAGGAACGGGCATGAAGGACGCATCTCCGGCATTCCTGGACGACGACGGCCCGAGCAGTGATTTGCCGATTCCGCCTCACAGGAACCGCAGCCTGCCCGAAGTTCTGGCGAGCCTTTCGGACGATGAACTTGCCGCCTGGCCGGGCGCGCTTGCAGACCAGGAGCGCACCCGGCGAAAATCCTACAAATGAAGCAAAATTCTTTTACTCATTCGCGCATCATGGTATGATGTAATGAGTTGAGCATCATTTGCAGCAGCCCCAGGAGAACGCATGAAAGTCATTGCCGTGCTGAACCAGAAAGGCGGGAGTGGGAAAACCACCATCGCCACCCACCTTGCCCGAGCGTTGCAGCTCGACGGCGCAGACGTGTTGCTTGTCGATTCCGACCCCCAGGGCAGCGCCCGCGATTGGGCCGCCGTGCGGGAAGATCAACCGCTAACTGTGGTCGGCATCGACCGGCCGACAATCGACCGCGACTTGAAGAACGTGGCGCGCAAGGATTTCGTCGTGATCGACGGCGCACCCCAAGCGGCCGACCTGGCCGTGTCGGCAATCAAAGCGGCCGACTTCGTGCTGATCCCGGTGCAGCCATCCCCCTACGACATTTGGGCCACGGCCGACCTGGTGGAGCTGGTCAAGCAGCGCATCGAGGTCACGGACGGGAAGCTACAGGCCGCCTTTGTCGTGTCGCGGGCGATCAAGGGCACCCGCATTGGCGGCGAGGTTGCCGAGGCCCTGGCCGGCTACGAGCTGCCCATCCTGGAGGCGCGCATCACGCAGCGCGTGAGCTACCCCGGCACTGCCGCCGCTGGCACGACCGTTCTTGAATCCGAGCCGGACGGCGATGCAGCGGCCGAGGTTCGCGCCCTGGCCGACGAGATCAAGCAAAAACTCATCTGATGTTTTGAGGAAAAAAGGAAATGAGCAAAACGACACTTAGCGCAGGTCGGCCGAGCGCACGCAACAACAAGGCCGCCACCCTTGCGAGCCTTGCCGACGCCGGCGGCAAGAAGCGGGTCAATTTCGAGCTGTCCGCCGAGCAGCATACAAAGCTGAAAATCTATGCGACGAAGCAGGGCAAGAGCATCAAAGAGCTGCTGACCGAGTATGTCGATGCACTGCCGGAATAAAACCCAAAAGCGCATTCACTCATTTGCATTTTAGCGGCTAAAGGGAGGCGGCATGACCAAGAAACGCGAGGTTCAGCAGATTGGCGAGATCATGGGCGACCTATTGGCAAGAGCGCAGGCGAAGGCCGCTTTGCCGCCGCCCAAACGCCAAGCCAAGAAGGTCACGCCGGCCGGCATTGCCTTGACCGAGCGCGATCAAAAGTTGATCGAGGCCGGCGCGGAGATCGCCACCGACCCGCCGAGCGGCGAGGACATGGCTTTCACCCATGCGGTGCTGTGCCAAGTGGGCTTGCCGCGAGCCAAGGTCGAGGGCCGCGAATTCATGCGGCAGTCGGGGGCAGCATGGGTCAACGTCCAGGCCGGCTATCTGGACGAGGGCAGCGGCCCGGTGCTGCAACCCATCCCCTACGGCGTCATGCCTCGGCTTGGTTTGGCGTGGGTTTCGACCTTCGCGGTGCGCAACAAAGAGCGAGAAATTCCCATTGGTGACAGTGCGGCCGAGTTCCTGCGCCTTATGGGCATGGAGAACGAGGGCCGCCGCTATACGACCCTGCGCCGACAGATGCACGCGCTGGCCGCGTGCCGTCTGCAACTCGGTTTCAAGGGCCGCACCTACAACGGGCAGCCGGTGCAGCAGTTCGATGCCTGGCTATCGAACAAGGAGACGCAGCAGCGGGCGCTATGGCCGGGCACTATGGTGCTATCCGAGGACTATTACGGATCTCTGATCGAAAGCGCCGTGCCGCTGGACAATCGCGCCCTGCACGCGCTGAAAGGCTCGGCGCTGGCTTTGGACGTGTACGCCTGGCTGGCCCACCGTCTGCACCGCATCGAGGGCAGGGGCATCACATTGCACTGGAAGGCCCTGCGCGAGCAGTTCGCCCAGGAATACCAGGGGAAAGACCCGGATAAGGACTTCAAGAAGAAGTTTCTGCCGGCGCTCAGGAAGGTGCTGGCCGTGTACCCCCAGGCGAAGGTGAAGCCGGTGACCGGCGGCGTGCTGCTGATCGGCTCACCGCCGCCGATTCCCTACAAGGGCGGCCCCACGGTTTAG",
				30,false);
	}

}
